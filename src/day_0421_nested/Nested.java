package day_0421_nested;

public class Nested {
	//중첩 클래스(Nested Class)란 클래스 내부에 선언한 클래스를 말한다.
	
	/*
	 * 특정 클래스와 관계를 맺을경우 -> 관계 클래스를 클래스 내부에 선언하는 것이 좋다
	 */
	
	/*
	 * 멤버클래스
	 * 1. 인스턴스 멤버 클래스
	 * class A{
	 * 
	 * class B{...}   -> A 객체를 생성해야만 사용할 수 있는 B 중첩 클래스
	 * 
	 * }
	 * 
	 * 정적 필드,메소드는 들어갈 수 없다
	 * 
	 * 생성하는법
	 * A a = new A();
	 * A.B b = a.new B();
	 * 
	 * 
	 * 2. 정적 맴버 클래스
	 * class A{
	 * 
	 * static class B{...}  -> method()가 실행할 때만 사용할 수 있는 B 중첩 클래스
	 * 
	 * }
	 * 
	 * 생성하는 법
	 * A.C c = new A.C();
	 */
	
	/*
	 * 로컬 클래스
	 * 접근제한자 및 static을 붙일 수 없다
	 * (로컬 클래스는 메소드 내부에서만 사용되므로, 접근을 제한할 필요가 없기 때문)
	 */
	
	//중첩 인터페이스
	/*
	 * 클래스 내부에 선언한 인터페이스
	 * 
	 * 이유:해당 클래스와 긴밀한 관계를 맺는 구현 클래스를 만들기 위해
	 * 
	 * UI 프로그래밍에서 이벤트처리를 위해 많이 사용됨
	 */
	
	/*
	 * 컴파일하면 바이트 코드 파일(.class)이 별도로 생성된다
	 * A $ B.class (A:바깥 클래스,B:안 클래스)
	 */
	
	/*
	 * 중첩클래스 에서 this
	 * 바깥클래스의 객체 참조가 아니라, 중첩 클래스의 객체 참조가 된다.
	 * 
	 * 중첩 클래스 내부에서 바깥클래스의 객체 참조를 얻으려면 바깥클래스의 이름을 this 앞에 붙여주면 된다
	 * 바깥클래스.this 로 접근 가능
	 */
	
}
